cat("model{

for(i in 1:k){
y[i] ~ dbin(ap[i], n[i])
ap[i] <- sub.p[i]*main.Se + (1-sub.p[i])*(1-main.Sp)
#informative hyperpior for prevalence
sub.p[i] ~ dbeta(alpha,beta) T(0.001,0.999)
}

alpha <- main.ap*main.psi
beta <- main.psi*(1-main.ap)
main.ap ~ dbeta(amu, bmu) T(0.001,0.999)
main.psi ~ dgamma(apsi, bpsi) T(0.001,0.999)

#informative prior for Se and Sp
main.Se ~ dbeta(ase, bse) T(0.001,0.999)
main.Sp ~ dbeta(asp, bsp) T(0.001,0.999)

#predictions
y.pre ~ dbin(main.ap,m)

pre.pstar.rep ~ dbeta(alpha,beta)
pre.pequal0 <- equals(pre.pstar.rep,0)
pre.plessthan0.05 <- step(0.05-pre.pstar.rep)
plessthanSetvalue <- step(perVal-main.ap)

}", file=paste("TrePreMultiple.txt"))



SaveParams <- c("main.ap","psi","main.Sp","main.Se","y.pre",
                "pre.pstar.rep","pre.pequal0","pre.plessthan0.05","sub.p","plessthanSetvalue")
dtst<-dataset()
dtst$region<-factor(dtst$region)
dtst$ID<-1:length(dtst$region)


generic_jags<-jagsoutput_TrueMult<-rjags::jags.model(data=list(n=dtst$n,y=dtst$positive, k=length(dtst$n),
                                                               ase=fb_SE$abeta, bse=fb_SE$bbeta,
                                                               asp=fb_SP$abeta, bsp=fb_SP$bbeta,
                                                               amu=fb$a, bmu=fb$b,m=100,
                                                               apsi=fb$ag, bpsi=fb$bg,
                                                               perVal=input$perVal),
                                                     inits=NULL, n.chains=input$nchains,n.adapt = floor(input$nniter/10),
                                                     file=paste("TrePreMultiple.txt"),quiet=TRUE)

Model1.mcmc <<- coda.samples(jagsoutput_TrueMult,
                            n.iter=input$nniter,thin =input$nnthin,
                            variable.names=SaveParams,seed=998)
return(Model1.mcmc)