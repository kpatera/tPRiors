plot(density(RE_1$d),xlim=c(-0.15,0.05))
plot(density(FE_1$d),xlim=c(-0.15,0.05))
plot(density(IVHET_1$d),xlim=c(-0.15,0.05))
plot(density(RE_1$d),xlim=c(-0.25,0.15))
plot(density(FE_1$d),xlim=c(-0.25,0.15))
plot(density(IVHET_1$d),xlim=c(-0.25,0.15))
cat("model
{
for (i in 1:Nstud)
{
ICC[i]<- tau.sq/(tau.sq+V[i])
psi[i]<-1/(1-ICC[i])
P[i] <- 1/(V[i]*psi[i])
y1[i] ~ dnorm(d, P[i])
P2[i] <- 1/V[i]
y2[i] ~ dnorm(delta[i], P2[i]) #study effects
delta[i] ~ dnorm(d_temp, prec)    #random level effects between studies
}
d_temp ~ dnorm(0, 0.01)
d ~ dnorm(0, 0.01)
OR <- exp(d)
tau~dunif(0,10)
tau.sq<-tau*tau
prec<-1/(tau.sq)}", file=paste("IVHET.txt"))
SaveParams <- c("d","P")
generic_jagsIVHET<-rjags::jags.model(data=list(y1=log(Data$y),y2=log(Data$y),V=Data$V,Nstud=Data$Nstud[1]),
inits=NULL, n.chains=2,
n.adapt = floor(10000/10),
file=paste("IVHET.txt"),quiet=TRUE)
Model1.mcmc_IVHET <<- coda.samples(generic_jagsIVHET,
n.iter=10000,thin = 4,
variable.names=SaveParams,seed=998)
par(mfrow=c(1,3))
RE_1<-as.data.frame(Model1.mcmc_RE[[1]])
FE_1<-as.data.frame(Model1.mcmc_FE[[1]])
IVHET_1<-as.data.frame(Model1.mcmc_IVHET[[1]])
plot(density(RE_1$d),xlim=c(-0.25,0.15))
plot(density(FE_1$d),xlim=c(-0.25,0.15))
plot(density(IVHET_1$d),xlim=c(-0.25,0.15))
cat("model
{
for (i in 1:Nstud)
{
ICC[i]<- tau.sq/(tau.sq+V[i])
psi[i]<-1/(1-ICC[i])
P[i] <- 1/(V[i]*psi[i])
y1[i] ~ dnorm(d, P[i])
P2[i] <- 1/V[i]
y2[i] ~ dnorm(delta[i], P2[i]) #study effects
delta[i] ~ dnorm(d_temp, prec)    #random level effects between studies
}
d_temp ~ dnorm(0, 0.01)
d ~ dnorm(0, 0.01)
OR <- exp(d)
tau~dunif(0,3)
tau.sq<-tau*tau
prec<-1/(tau.sq)}", file=paste("IVHET.txt"))
SaveParams <- c("d","P")
generic_jagsIVHET<-rjags::jags.model(data=list(y1=log(Data$y),y2=log(Data$y),V=Data$V,Nstud=Data$Nstud[1]),
inits=NULL, n.chains=2,
n.adapt = floor(10000/10),
file=paste("IVHET.txt"),quiet=TRUE)
Model1.mcmc_IVHET <<- coda.samples(generic_jagsIVHET,
n.iter=10000,thin = 4,
variable.names=SaveParams,seed=998)
par(mfrow=c(1,3))
RE_1<-as.data.frame(Model1.mcmc_RE[[1]])
FE_1<-as.data.frame(Model1.mcmc_FE[[1]])
IVHET_1<-as.data.frame(Model1.mcmc_IVHET[[1]])
plot(density(RE_1$d),xlim=c(-0.25,0.15))
plot(density(FE_1$d),xlim=c(-0.25,0.15))
plot(density(IVHET_1$d),xlim=c(-0.25,0.15))
Data<-data.frame(y=c(0.94,0.99,0.95,0.91,0.95,0.97,0.92),
V=c(0.0135,0.0029,0.035,0.023,0.015,0.019,
0.038),Nstud=7)
ref<-rma.uni(log(Data$y),sei = Data$V,method = "DL")
summary(ref)
# Simple random-effects
cat("model
{
for (i in 1:Nstud)
{
P[i] <- 1/V[i]
y[i] ~ dnorm(delta[i], P[i]) #study effects
delta[i] ~ dnorm(d, prec)    #random level effects between studies
}
d ~ dnorm(0, 0.01)
OR <- exp(d)
tau~dunif(0,3)
tau.sq<-tau*tau
prec<-1/(tau.sq)
}", file=paste("RE.txt"))
SaveParams <- c("d","P","y","tau","delta")
generic_jagsRE<-rjags::jags.model(data=list(y=log(Data$y),V=Data$V,Nstud=Data$Nstud[1]),
inits=NULL, n.chains=2,
n.adapt = floor(10000/10),
file=paste("RE.txt"),quiet=TRUE)
Model1.mcmc_RE  <<- coda.samples(generic_jagsRE,
n.iter=50000,thin = 4,
variable.names=SaveParams,seed=998)
# Simple fixed-effects
cat("model
{
for (i in 1:Nstud)
{
P[i] <- 1/V[i]
y[i] ~ dnorm(d, P[i])
}
d ~ dnorm(0, 0.01)
OR <- exp(d)
}", file=paste("FE.txt"))
SaveParams <- c("d","P","y")
generic_jagsFE<-rjags::jags.model(data=list(y=log(Data$y),V=Data$V,Nstud=Data$Nstud[1]),
inits=NULL, n.chains=2,
n.adapt = floor(10000/10),
file=paste("FE.txt"),quiet=TRUE)
Model1.mcmc_FE <<- coda.samples(generic_jagsFE,
n.iter=50000,thin = 4,
variable.names=SaveParams,seed=998)
# Simple IVHET-model
cat("model
{
for (i in 1:Nstud)
{
ICC[i]<- tau.sq/(tau.sq+V[i])
psi[i]<-1/(1-ICC[i])
P[i] <- 1/(V[i]*psi[i])
y1[i] ~ dnorm(d, P[i])
P2[i] <- 1/V[i]
y2[i] ~ dnorm(delta[i], P2[i]) #study effects
delta[i] ~ dnorm(d_temp, prec)    #random level effects between studies
}
d_temp ~ dnorm(0, 0.01)
d ~ dnorm(0, 0.01)
OR <- exp(d)
tau~dunif(0,3)
tau.sq<-tau*tau
prec<-1/(tau.sq)}", file=paste("IVHET.txt"))
SaveParams <- c("d","P")
generic_jagsIVHET<-rjags::jags.model(data=list(y1=log(Data$y),y2=log(Data$y),V=Data$V,Nstud=Data$Nstud[1]),
inits=NULL, n.chains=2,
n.adapt = floor(10000/10),
file=paste("IVHET.txt"),quiet=TRUE)
Model1.mcmc_IVHET <<- coda.samples(generic_jagsIVHET,
n.iter=50000,thin = 4,
variable.names=SaveParams,seed=998)
par(mfrow=c(1,3))
RE_1<-as.data.frame(Model1.mcmc_RE[[1]])
FE_1<-as.data.frame(Model1.mcmc_FE[[1]])
IVHET_1<-as.data.frame(Model1.mcmc_IVHET[[1]])
plot(density(RE_1$d),xlim=c(-0.25,0.15))
plot(density(FE_1$d),xlim=c(-0.25,0.15))
plot(density(IVHET_1$d),xlim=c(-0.25,0.15))
summary(Model1.mcmc_RE[[1]][,1])
summary(RE_1$d)
summary(FE_1$d)
summary(IVHET_1$d)
0.5/(0.5+0.02)
0.5/(0.5+0.02)
1/(1-0.95)
0.15*20
0.11*20
3/5.2
0.15/0.26
shiny::runApp()
runApp()
runApp()
runApp()
?radioButtons
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?observeEvent
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x<-seq(0,1,length.out = 2000)
#plot(x,dbeta(x = x,dbeta(x = x,shape1 = fb$a,shape2 = fb$b),shape1 = fb$a,shape2 = fb$b),type = "l",lwd=3,ylab = "Density Beta")
Prevalence<-dbeta(x = x,shape1 = 1,shape2 = 1)
df <- data.frame(x, Prevalence)
df <- gather(df, func, val, -x)
gg <- ggplot(df, aes(x=x, y=val, group=func))
gg <- gg + geom_line(aes(color=func),size=1.3)
gg <- gg + scale_y_continuous(expand=c(0, 0))
gg <- gg + scale_color_manual(name="Prior(s)",
values=c("#e69138"),
labels=c("Prevalence"))
gg <- gg + labs(x="Density", y="Probability distribution functions")
gg <- gg + theme_bw()
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.line=element_line(size=0.15, color="#2b2b2b"))
ggplotly(gg)
x<-seq(0,1,length.out = 2000)
#plot(x,dbeta(x = x,dbeta(x = x,shape1 = fb$a,shape2 = fb$b),shape1 = fb$a,shape2 = fb$b),type = "l",lwd=3,ylab = "Density Beta")
Prevalence<-dbeta(x = x,shape1 = 0.1,shape2 = 0.1)
df <- data.frame(x, Prevalence)
df <- gather(df, func, val, -x)
gg <- ggplot(df, aes(x=x, y=val, group=func))
gg <- gg + geom_line(aes(color=func),size=1.3)
gg <- gg + scale_y_continuous(expand=c(0, 0))
gg <- gg + scale_color_manual(name="Prior(s)",
values=c("#e69138"),
labels=c("Prevalence"))
gg <- gg + labs(x="Density", y="Probability distribution functions")
gg <- gg + theme_bw()
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.line=element_line(size=0.15, color="#2b2b2b"))
ggplotly(gg)
x<-seq(0,1,length.out = 2000)
#plot(x,dbeta(x = x,dbeta(x = x,shape1 = fb$a,shape2 = fb$b),shape1 = fb$a,shape2 = fb$b),type = "l",lwd=3,ylab = "Density Beta")
Prevalence<-dbeta(x = x,shape1 = 2,shape2 = 2)
df <- data.frame(x, Prevalence)
df <- gather(df, func, val, -x)
gg <- ggplot(df, aes(x=x, y=val, group=func))
gg <- gg + geom_line(aes(color=func),size=1.3)
gg <- gg + scale_y_continuous(expand=c(0, 0))
gg <- gg + scale_color_manual(name="Prior(s)",
values=c("#e69138"),
labels=c("Prevalence"))
gg <- gg + labs(x="Density", y="Probability distribution functions")
gg <- gg + theme_bw()
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.line=element_line(size=0.15, color="#2b2b2b"))
ggplotly(gg)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#Scenario 1
1700*12
runApp()
fb
#source("Functions/multiroot.R",local = TRUE)
fb<<-findbeta2(themean =0.2, percentile=0.9,lower.v=TRUE, percentile.value=0.5)
runApp()
#source("Functions/multiroot.R",local = TRUE)
fb<<-findbeta2(themean =0.2, percentile=0.9,lower.v=TRUE, percentile.value=0.5)
fb
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#Scenario 1
1700*12
#Scenario 1
1700*12
#Scenario 2
2700*12
#Scenario 3
3200*12
#Scenario 4
4000*12
#Scenario 4 - Extented Scenario, 2nd year, + 1 colleague + travle.
4600*12
#Scenario 4 - Extented Scenario, 2nd year, + 1 colleague + travle. 52000-56000euros/year
4600*12
#Scenario 1 - Basic Scenario, intro year, competitive 1 20400euros/year
(1700*12/1.16)
(1700*12/1.16)
Asf1=5000;Asf2=7500
Foros1=0.76;Foros2=0.87
Asf1=5000;Asf2=7500
Foros1=0.76;Foros2=0.87
PErate=1.16
k=12
#Scenario 1 - Basic Scenario, intro year, competitive 1 20400euros/year
Poso=Salary*k/PErate
Foros1*(Poso)-Asf1
#Scenario 1 - Basic Scenario, intro year, competitive 1 20400euros/year
Salary=1700;Poso=Salary*k/PErate
Foros1*(Poso)-Asf1
Foros1*(Poso)-Asf2
Foros2*(Poso)-Asf1
Foros2*(Poso)-Asf2
Foros1
Poso
(Poso)/Foros1+Asf1
(Poso)/Foros1+Asf2
(Poso)/Foros2+Asf1
(Poso)/Foros2+Asf2
Asf1=5000;Asf2=7500
Foros1=0.76;Foros2=0.87
PErate=1.16
k=12
#Scenario 1 - Basic Scenario, intro year, competitive 1 20400euros/year
Profit=1700;Poso=Profit*k/PErate
(Poso)/Foros1+Asf1
(Poso)/Foros1+Asf2
(Poso)/Foros2+Asf1
(Poso)/Foros2+Asf2
#Scenario 2 - Main Scenario, Start, Competitive 2 32400euros/year
#-25214 - 30639
Profit=2700;Poso=Profit*k/PErate
(Poso)/Foros1+Asf1
(Poso)/Foros1+Asf2
(Poso)/Foros2+Asf1
(Poso)/Foros2+Asf2
#Scenario 3 - Main Scenario+travels, Start, Competitive 3 38400euros/year
#-37104 - 44251
Profit=3300;Poso=Profit*k/PErate
(Poso)/Foros1+Asf1
(Poso)/Foros1+Asf2
(Poso)/Foros2+Asf1
(Poso)/Foros2+Asf2
#Scenario 4 - Extented Scenario, 2nd year, + 1 colleague + travle. 52000-56000euros/year
Profit=3300;Poso=Salary*k/PErate
(Poso)/Foros1+Asf1
(Poso)/Foros1+Asf2
(Poso)/Foros2+Asf1
(Poso)/Foros2+Asf2
#Scenario 4 - Extented Scenario, 2nd year, + 1 colleague + travle. 52000-56000euros/year
#-44239 - 52418
Profit=4000;Poso=Salary*k/PErate
(Poso)/Foros1+Asf1
(Poso)/Foros1+Asf2
(Poso)/Foros2+Asf1
(Poso)/Foros2+Asf2
#Scenario 4 - Extented Scenario, 2nd year, + 1 colleague + travle. 52000-56000euros/year
#-44239 - 52418
Profit=4000;Poso=Profit*k/PErate
(Poso)/Foros1+Asf1
(Poso)/Foros1+Asf2
(Poso)/Foros2+Asf1
(Poso)/Foros2+Asf2
#
Profit=2700;k=12;PErate
#
Profit=2700;k=12;PErate=1.16;Foros1=0.75;Asf1=7500
(Profit*k/PErate)/Foros1+Asf1
PErate=1.05:1.25
Gross=(Profit*k/PErate)/Foros1+Asf1
plot(Gross,PErate)
PErate
PErate=seq(1.05,1.25,by=0.01)
PErate
Gross=(Profit*k/PErate)/Foros1+Asf1
plot(Gross,PErate)
plot(PErate,Gross)
Profit=seq(1800,4000,by=200);
#PErate=seq(1.05,1.25,by=0.01)
Gross=(Profit*k/PErate)/Foros1+Asf1
plot(PErate,Gross)
k=12;Foros1=0.75;Asf1=7500;PErate=1.16
Profit=seq(1800,4000,by=200);
Profit
#PErate=seq(1.05,1.25,by=0.01)
Gross=(Profit*k/PErate)/Foros1+Asf1
plot(PErate,Gross)
plot(Profit,Gross)
#PErate=seq(1.05,1.25,by=0.01)
par(mfrow=c(2,1))
Gross=(Profit*k/PErate)/Foros1+Asf1
plot(Profit,Gross)
#PErate=seq(1.05,1.25,by=0.01)
par(mfrow=c(1,2))
Gross=(Profit*k/PErate)/Foros1+Asf1
plot(Profit,Gross)
k=12;Foros1=0.87;Asf1=5000;PErate=1.16
Profit=seq(1800,4000,by=200);
Gross=(Profit*k/PErate)/Foros1+Asf1
plot(Profit,Gross)
k=12;Foros1=0.87;Asf1=5000;PErate=1.16
Profit=seq(1800,4000,by=200);#PErate=seq(1.05,1.25,by=0.01)
Gross1=(Profit*k/PErate)/Foros1+Asf1
k=12;Foros1=0.75;Asf1=7500;PErate=1.12
Gross2=(Profit*k/PErate)/Foros1+Asf1
plot(Profit,Gross1,type="l")
lines(Profit,Gross2,type="l",col="red")
plot(Profit,Gross1,type="l",ylab = "Gross income")
lines(Profit,Gross2,type="l",col="red",ylab = "Net montly income"))
lines(Profit,Gross2,type="l",col="red",ylab = "Net montly income")
lines(y=c(0,10000),x = 2700)
abline(y=c(0,10000),x = 2700)
abline(h = 2700)
abline(h = 2700,v = 0)
abline(h = c(2700,2700),v = c(0,10000))
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
generic_jags<-jagsoutput_TrueMult<-rjags::jags.model(data=list(n=dtst$n,y=dtst$positive, k=length(dtst$n),m=100,
ase=fb_SE$a, bse=fb_SE$b,
asp=fb_SP$a, bsp=fb_SP$b,
amu=fb$abeta, bmu=fb$bbeta,
apsi=fb$abeta, bpsi=fb$bbeta,
perVal=input$perVal),
inits=NULL, n.chains=input$nchains,n.adapt = floor(input$nniter/10),
file=paste("TrePreMultiple.txt"),quiet=TRUE)
runApp()
runApp()
alpha
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
findbetamupsi2
runApp()
runApp()
fb
runApp()
runApp()
runApp()
runApp()
data.frame(read_excel("Data/efs31678e-sup-0004-annex_d.xlsx"))
data.frame(read_excel("Data/efs31678e-sup-0004-annex_d_NonAttica.xlsx"))
data.frame(read_excel("Data/efs31678e-sup-0004-annex_d_Attica.xlsx"))
data.frame(read_excel("Data/efs31678e-sup-0004-annex_d_NonAttica.xlsx"))
data.frame(read_excel("Data/efs31678e-sup-0004-annex_d_Attica.xlsx"))
dim(data.frame(read_excel("Data/efs31678e-sup-0004-annex_d_Attica.xlsx")))
dim(data.frame(read_excel("Data/efs31678e-sup-0004-annex_d_NonAttica.xlsx")))
dim(data.frame(read_excel("Data/efs31678e-sup-0004-annex_d.xlsx")))
runApp()
shiny::runApp()
shiny::runApp()
summary(Model1.mcmc$main.pstar.rep)
summary(x)
x=1:100
summary(x)
round(summary(x))
round(summary(x),2)
runApp()
?req
req(!is.na(input$Indata2))
req(!is.na(Indata2))
shiny::runApp()
shiny::runApp()
Model1.mcmc
Model1.mcmc[[1]]
head(Model1.mcmc[[1]])
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# OPEN (Moderate) Timer for priors/analysis.
# 2. OPEN (Large) - Allow for the ability to change different options (i.e. mean median percentile)
#for different prior specifications. So can we move this option at the beginning of each prior tag?
#---- Load packages ----#
packages.list<-c("shiny","shinythemes","shinyWidgets","shinydashboard",
"PriorGen","R2jags","ggplot2","tidyr","rjags",
"shinyjs","rmarkdown","markdown","plotly","ggmcmc","knitr","shinyalert",
"grid","DT","readxl","gridExtra","psych","rootSolve","devtools") # ,
#packages.new <- packages.list[!(packages.list %in% installed.packages()[,"Package"])]
#install.packages(packages.new);rm(packages.new)
lapply(packages.list, require, character.only = TRUE); rm(packages.list)
#---- Load functions and extra functionss ----#
Funcs<-c("findbeta2.R","findbetaqq2.R","findbetamupsi.R","findbetamupsi2.R","ggs_density.R",
"get_family.R","multiroot.R","perturb.R","gss.R")
invisible(lapply(Funcs,function(i){ source(paste("Functions/",i,sep="")) }))
#---- Create temp variable for Rmarkdown reports and plotting ----#
fb<-list(1,1)
#---- Load pre-loaded datasets ----#
require(readxl)
Example1_4Studies <<- data.frame(read_excel("Data/efs31678e-sup-0004-annex_d_4studies.xlsx"))
Example2_40Studies <<- data.frame(read_excel("Data/efs31678e-sup-0004-annex_d_Attica.xlsx"))
#Example3_102Studies <<- data.frame(read_excel("Data/efs31678e-sup-0004-annex_d_NonAttica.xlsx"))
Example4_129studies <<- data.frame(read_excel("Data/efs31678e-sup-0004-annex_d.xlsx"))
name_data<-"sidebar user input"
shiny::runApp('~/sample-apps/tPRiors')
runApp('~/sample-apps/tPRiors')
runApp('~/sample-apps/tPRiors')
runApp('~/sample-apps/tPRiors')
runApp('~/sample-apps/tPRiors')
runApp('~/sample-apps/tPRiors')
runApp('~/sample-apps/tPRiors')
require(plotly)
devtools;intall-github('ropensci/plotly')
devtools::install-github('ropensci/plotly')
devtools::install_github('ropensci/plotly')
require("ropensci/plotly")
runApp('/srv/shiny-server/Uth_Epi/tPRiors')
runApp('/srv/shiny-server/Uth_Epi/tPRiors')
runApp('/srv/shiny-server/Uth_Epi/tPRiors')
?v
?plot_ly
